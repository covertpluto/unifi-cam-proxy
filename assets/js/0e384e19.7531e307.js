"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={slug:"/",sidebar_position:1},s="Installation",c={unversionedId:"intro",id:"intro",title:"Installation",description:"Prerequisites",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/",editUrl:"https://github.com/keshavdv/unifi-cam-proxy/tree/main/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"RTSP",permalink:"/configuration/rtsp"}},p=[{value:"Prerequisites",id:"prerequisites",children:[{value:"Certificate",id:"certificate",children:[],level:3},{value:"Adoption Token",id:"adoption-token",children:[],level:3}],level:2},{value:"Docker",id:"docker",children:[{value:"Multiple cameras",id:"multiple-cameras",children:[],level:3}],level:2},{value:"Bare Metal",id:"bare-metal",children:[{value:"Ubuntu/Debian",id:"ubuntudebian",children:[],level:3}],level:2}],u={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"installation"},"Installation"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("h3",{id:"certificate"},"Certificate"),(0,i.kt)("p",null,"Generate a certificate by performing one of the following:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"If you have a UniFi camera: ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"scp ubnt@<your-unifi-cam>:/var/etc/persistent/server.pem client.pem\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Create your own client certificate via:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'openssl ecparam -out /tmp/private.key -name prime256v1 -genkey -noout\nopenssl req -new -sha256 -key /tmp/private.key -out /tmp/server.csr -subj "/C=TW/L=Taipei/O=Ubiquiti Networks Inc./OU=devint/CN=camera.ubnt.dev/emailAddress=support@ubnt.com"\nopenssl x509 -req -sha256 -days 36500 -in /tmp/server.csr -signkey /tmp/private.key -out /tmp/public.key\ncat /tmp/private.key /tmp/public.key > client.pem\nrm -f /tmp/private.key /tmp/public.key /tmp/server.csr\n')),(0,i.kt)("h3",{id:"adoption-token"},"Adoption Token"),(0,i.kt)("p",null,"In order to add a camera to Protect, you must first generate an adoption token. The token is only valid for 60 minutes so you'll need to re-generate a new one if it expires during your initial setup."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"On the Protect UI, click 'Add Devices' and select 'G3 Micro'. Select 'Continue on Web' and type in a random string for the SSID and Password fields and click 'Generate QR Code'.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If you do not see this button, manually go to one of the following (replace the {NVR_IP} with the local gateway IP address):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Older devices:")," https://{NVR IP}/protect/devices/add"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Newer devices:")," https://{NVR IP}/proxy/protect/api/cameras/qr "))))),(0,i.kt)("li",{parentName:"ol"},"Take a screenshot of the QR code and upload it to ",(0,i.kt)("a",{parentName:"li",href:"https://zxing.org/w/decode.jspx"},"https://zxing.org/w/decode.jspx")),(0,i.kt)("li",{parentName:"ol"},"Decode the QR code and extract the token from the second to last line in the 'Raw Text' field.")),(0,i.kt)("h2",{id:"docker"},"Docker"),(0,i.kt)("p",null,"Using Docker is the recommended installation method. The sample docker-compose file below is the recommended deployment for most users. Note that the certificate generated in the previous step must be in the same directory as the docker-compose.yaml file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'version: "3.9"\nservices:\n  unifi-cam-proxy:\n    restart: unless-stopped\n    image: keshavdv/unifi-cam-proxy\n    volumes:\n      - "./client.pem:/client.pem"\n    command: unifi-cam-proxy --host {NVR IP} --cert /client.pem --token {Adoption token} rtsp -s rtsp://192.168.201.15:8554/cam\'\n')),(0,i.kt)("h3",{id:"multiple-cameras"},"Multiple cameras"),(0,i.kt)("p",null,"To use multiple cameras, start an instance of the proxy for each, with a unique MAC address argument. Using docker-compose, your setup might look like the following: "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"}," Note: This conforms to MAC randomization rules, so should not cause issues with real devices. See here for more details: ",(0,i.kt)("a",{parentName:"em",href:"https://www.mist.com/get-to-know-mac-address-randomization-in-2020/"},"https://www.mist.com/get-to-know-mac-address-randomization-in-2020/")," "))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"version: \"3.5\"\nservices:\n  proxy-1:\n    restart: unless-stopped\n    image: keshavdv/unifi-cam-proxy\n    volumes:\n      - \"./client.pem:/client.pem\"\n    command: unifi-cam-proxy --host {NVR IP} --mac 'AA:BB:CC:00:11:22' --cert /client.pem --token {Adoption token} rtsp -s rtsp://192.168.201.15:8554/cam'\n  proxy-2:\n    restart: unless-stopped\n    image: keshavdv/unifi-cam-proxy\n    volumes:\n      - \"./client.pem:/client.pem\"\n    command: unifi-cam-proxy --host {NVR IP} --mac 'AA:BB:CC:33:44:55' --cert /client.pem --token {Adoption token} rtsp -s rtsp://192.168.201.15:8554/cam'\n")),(0,i.kt)("h2",{id:"bare-metal"},"Bare Metal"),(0,i.kt)("p",null,"If you cannot use Docker, you may install the proxy on most Linux distros, but support is not guaranteed. Find instructions for your distro below:"),(0,i.kt)("h3",{id:"ubuntudebian"},"Ubuntu/Debian"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"apt install ffmpeg netcat python3 python3-pip\npip3 install unifi-cam-proxy\nunifi-cam-proxy --host {NVR IP} --cert /client.pem --token {Adoption token} rtsp -s rtsp://192.168.201.15:8554/cam'\n")))}m.isMDXComponent=!0}}]);